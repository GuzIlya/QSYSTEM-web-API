package ru.apertum.qsystem.custom.testapi.common;

/**
 * Перечисление состояний кастомера в которых он может находиться.
 *
 * @author Evgeniy Egorov
 */
public enum CustomerState {
    // значения состояния "очередника"

    /**
     * 0 удален по неявке.
     */
    STATE_DEAD,
    /**
     * 1 стоит и ждет в очереди.
     */
    STATE_WAIT,
    /**
     * 2 стоит и ждет в очереди после того, как отлежался в отложенных положенное время и автоматически отправился в прежнюю очередь с повышенным приоритетом.
     */
    STATE_WAIT_AFTER_POSTPONED,
    /**
     * 3 Кастомер был опять поставлен в очередь т.к. услуга комплекстая и ждет с номером.
     */
    STATE_WAIT_COMPLEX_SERVICE,
    /**
     * 4 пригласили.
     */
    STATE_INVITED,
    /**
     * 5 пригласили повторно в цепочке обработки. т.е. клиент вызван к оператору не первый раз а после редиректа или отложенности.
     */
    STATE_INVITED_SECONDARY,
    /**
     * 6 отправили в другую очередь, идет как бы по редиректу в верх.
     * Стоит ждет к новой услуге.
     */
    STATE_REDIRECT,
    /**
     * 7 начали с ним работать.
     */
    STATE_WORK,
    /**
     * 8 начали с ним работать повторно в цепочке обработки.
     */
    STATE_WORK_SECONDARY,
    /**
     * 9 состояние когда кастомер возвращается к прежней услуге после редиректа,
     * по редиректу в низ. Стоит ждет к старой услуге.
     */
    STATE_BACK,
    /**
     * 10 с кастомером закончили работать и он идет домой.
     */
    STATE_FINISH,
    /**
     * 11 с кастомером закончили работать и поместили в отложенные. домой не идет, сидит ждет покуда не вызовут.
     */
    STATE_POSTPONED
}

